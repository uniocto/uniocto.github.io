{"version":3,"sources":["webpack:///./src/components/tag-list/tag-list.module.less","webpack:///./src/components/button/button.js","webpack:///./src/components/post-list/post-list.module.less","webpack:///./src/components/archive-pagination/archive-pagination.js","webpack:///./src/templates/archive/archive.js","webpack:///./src/components/tag-list/tag-list.js","webpack:///./src/components/post-list/post-list.js","webpack:///./src/components/button/button.module.less","webpack:///./src/components/archive-pagination/archive-pagination.module.less"],"names":["module","exports","Button","children","to","buttonStyle","className","style","button","defaultProps","ArchivePagination","prevPage","nextPage","container","Utils","resolvePageUrl","Config","pages","archive","buttonLeft","buttonRight","Archive","data","pageContext","archivePage","lastArchivePage","title","description","path","posts","allMarkdownRemark","edges","TagList","tags","console","log","filter","tag","index","indexOf","sort","map","home","key","name","capitalize","PostList","post","node","frontmatter","date","cover","excerpt","fluid","childImageSharp","alt","content"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,iC,8HCMnBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,YAAjB,OACb,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAcC,IAAMC,OAAX,IAAqBH,GACzCF,IAULD,EAAOO,aAAe,CACpBJ,YAAa,IAGAH,S,qBCtBfF,EAAOC,QAAU,CAAC,UAAY,qCAAqC,KAAO,gCAAgC,MAAQ,iCAAiC,QAAU,qC,oLCqC9IS,EA5BW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACxB,yBAAKN,UAAWC,IAAMM,WACnBF,EACC,kBAAC,IAAD,CACEP,GAAIU,IAAMC,eAAeC,IAAOC,MAAMC,QAASP,GAC/CN,YAAaE,IAAMY,YAEnB,kBAAC,IAAD,MACA,8CAEA,KACHP,EACC,kBAAC,IAAD,CACER,GAAIU,IAAMC,eAAeC,IAAOC,MAAMC,QAASN,GAC/CP,YAAaE,IAAMa,aAEnB,6CACA,kBAAC,IAAD,OAEA,Q,kCC7BR,qGAwEeC,UA7DC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACfC,EAAiCD,EAAjCC,YACFb,EAAWa,EAAc,EAAIA,EAAc,EAAI,KAC/CZ,EAAWY,EAFwBD,EAApBE,gBAE4BD,EAAc,EAAI,KAEnE,OACE,kBAAC,IAAD,CAAQE,MAAM,WACZ,kBAAC,IAAD,CACEA,MAAK,kBAAoBF,EACzBG,YAAY,YACZC,KAAMZ,IAAOC,MAAMC,UAErB,kBAAC,IAAD,CAAUW,MAAOP,EAAKQ,kBAAkBC,QACxC,kBAAC,IAAD,CAAmBpB,SAAUA,EAAUC,SAAUA,O,wKCGxCoB,EAlBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,yBAAK3B,UAAWC,IAAM0B,MACnBC,QAAQC,IAAIF,GACZA,EACEG,QAAO,SAACC,EAAKC,GAAN,OAAgBA,IAAUL,EAAKM,QAAQF,MAC9CG,OACAC,KAAI,SAAAJ,GAAG,OACN,kBAAC,OAAD,CAAMjC,GAAIU,IAAMC,eAAeC,IAAOC,MAAMyB,MAAM5B,IAAMC,eAAeC,IAAOC,MAAMoB,IAAKA,GAAMM,IAAKN,GACjGrB,IAAOiB,KAAKI,GAAKO,MAAQ9B,IAAM+B,WAAWR,U,yMC4CtCS,EAlDE,SAAC,GAAD,IAAGjB,EAAH,EAAGA,MAAH,OACf,yBAAKvB,UAAWC,IAAMM,WACnBgB,EAAMY,KAAI,SAACM,EAAMT,GAAW,IAAD,EAC0BS,EAAKC,KAAKC,YAAtDvB,EADkB,EAClBA,MAAOwB,EADW,EACXA,KAAMtB,EADK,EACLA,KAAMK,EADD,EACCA,KAAMkB,EADP,EACOA,MAAOC,EADd,EACcA,QAExC,OADAlB,QAAQC,IAAIY,GAEV,yBAAKJ,IAAKjB,EAAOpB,UAAWC,IAAMwC,MAChC,yBAAKzC,UAAWC,IAAM4C,OACpB,kBAAC,OAAD,CAAM/C,GAAIU,IAAMC,eAAeC,IAAOC,MAAMyB,MAAM5B,IAAMC,eAAea,IACrE,kBAAC,IAAD,CACEyB,MAAOF,EAAMG,gBAAgBD,MAC7B3B,MAAO0B,EACPG,IAAK7B,MAIX,yBAAKpB,UAAWC,IAAMiD,SACpB,kBAAC,OAAD,CAAMpD,GAAIU,IAAMC,eAAeC,IAAOC,MAAMyB,MAAM5B,IAAMC,eAAea,IACpEsB,EAAO,+BAAQA,GAAgB,KAChC,4BAAKxB,GACL,2BAAI0B,IAEN,kBAAC,IAAD,CAASnB,KAAMA,Y,qBChC3BjC,EAAOC,QAAU,CAAC,OAAS,iC,qBCA3BD,EAAOC,QAAU,CAAC,UAAY,8CAA8C,WAAa,+CAA+C,YAAc","file":"component---src-templates-archive-archive-js-52c9e3f8831944c10ef7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"tag-list-module--tags--O_Obx\"};","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n/* App imports */\nimport style from './button.module.less'\n\nconst Button = ({ children, to, buttonStyle }) => (\n  <Link to={to} className={`${style.button} ${buttonStyle}`}>\n    {children}\n  </Link>\n)\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.string.isRequired,\n  buttonStyle: PropTypes.string,\n}\n\nButton.defaultProps = {\n  buttonStyle: '',\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-list-module--container--2AqiX\",\"post\":\"post-list-module--post--1gkyY\",\"cover\":\"post-list-module--cover--31q1n\",\"content\":\"post-list-module--content--ixjr-\"};","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\n/* App imports */\nimport Button from '../../components/button'\nimport Config from '../../../config'\nimport Utils from '../../utils'\nimport style from './archive-pagination.module.less'\n\nconst ArchivePagination = ({ prevPage, nextPage }) => (\n  <div className={style.container}>\n    {prevPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, prevPage)}\n        buttonStyle={style.buttonLeft}\n      >\n        <FaArrowLeft />\n        <span>Newer posts</span>\n      </Button>\n    ) : null}\n    {nextPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, nextPage)}\n        buttonStyle={style.buttonRight}\n      >\n        <span>Older posts</span>\n        <FaArrowRight />\n      </Button>\n    ) : null}\n  </div>\n)\n\nArchivePagination.propTypes = {\n  prevPage: PropTypes.number,\n  nextPage: PropTypes.number,\n}\n\nexport default ArchivePagination\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n/* App imports */\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport PostList from '../../components/post-list'\nimport ArchivePagination from '../../components/archive-pagination'\nimport Config from '../../../config'\n\nconst Archive = ({ data, pageContext }) => {\n  const { archivePage, lastArchivePage } = pageContext\n  const prevPage = archivePage > 1 ? archivePage - 1 : null\n  const nextPage = archivePage < lastArchivePage ? archivePage + 1 : null\n\n  return (\n    <Layout title=\"Archive\">\n      <SEO\n        title={`Archive | Page ${archivePage}`}\n        description=\"Old posts\"\n        path={Config.pages.archive}\n      />\n      <PostList posts={data.allMarkdownRemark.edges} />\n      <ArchivePagination prevPage={prevPage} nextPage={nextPage} />\n    </Layout>\n  )\n}\n\nArchive.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    archivePage: PropTypes.number.isRequired,\n    lastArchivePage: PropTypes.number.isRequired,\n  }).isRequired,\n}\n\nexport const query = graphql`\n  query($postPaths: [String!]) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { in: $postPaths } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            date(formatString: \"MMMM DD, YYYY\")\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Archive\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n/* App imports */\nimport style from './tag-list.module.less'\nimport Config from '../../../config'\nimport Utils from '../../utils'\n\nconst TagList = ({ tags }) => (\n  <div className={style.tags}>\n    {console.log(tags)}\n    {tags\n      .filter((tag, index) => index === tags.indexOf(tag)) // Remove duplicate values\n      .sort()\n      .map(tag => (\n        <Link to={Utils.resolvePageUrl(Config.pages.home)+Utils.resolvePageUrl(Config.pages.tag, tag)} key={tag}>\n          {Config.tags[tag].name || Utils.capitalize(tag)}\n        </Link>\n      ))}\n  </div>\n)\n\nTagList.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default TagList\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n/* App imports */\nimport style from './post-list.module.less'\nimport TagList from '../tag-list'\nimport Utils from '../../utils'\nimport Config from '../../../config'\n\nconst PostList = ({ posts }) => (\n  <div className={style.container}>\n    {posts.map((post, index) => {\n      const { title, date, path, tags, cover, excerpt } = post.node.frontmatter\n      console.log(post)\n      return (\n        <div key={title} className={style.post}>\n          <div className={style.cover}>\n            <Link to={Utils.resolvePageUrl(Config.pages.home)+Utils.resolvePageUrl(path)}>\n              <Img\n                fluid={cover.childImageSharp.fluid}\n                title={excerpt}\n                alt={title}\n              />\n            </Link>\n          </div>\n          <div className={style.content}>\n            <Link to={Utils.resolvePageUrl(Config.pages.home)+Utils.resolvePageUrl(path)}>\n              {date ? <label>{date}</label> : null}\n              <h2>{title}</h2>\n              <p>{excerpt}</p>\n            </Link>\n            <TagList tags={tags} />\n          </div>\n        </div>\n      )\n    })}\n  </div>\n)\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          date: PropTypes.string,\n          path: PropTypes.string.isRequired,\n          tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n          cover: PropTypes.shape({\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }),\n      }),\n    })\n  ),\n}\n\nexport default PostList\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-module--button--24AQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"archive-pagination-module--container--2VM7Y\",\"buttonLeft\":\"archive-pagination-module--buttonLeft--3CRS6\",\"buttonRight\":\"archive-pagination-module--buttonRight--Wnali\"};"],"sourceRoot":""}